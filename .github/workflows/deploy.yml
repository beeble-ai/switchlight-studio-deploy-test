name: Publish Release, Upload to S3, and Notify Slack

on:
  workflow_dispatch:

jobs:
  release-and-notify:
    runs-on: self-hosted
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Publish Latest Draft Release
      uses: actions/github-script@v5
      with:
        script: |
          const { data: releases } = await github.rest.repos.listReleases({
            owner: context.repo.owner,
            repo: context.repo.repo,
          });
          const draftRelease = releases.find(release => release.draft);
          if (!draftRelease) {
            throw new Error("No draft release found");
          }
          const { data: publishedRelease } = await github.rest.repos.updateRelease({
            owner: context.repo.owner,
            repo: context.repo.repo,
            release_id: draftRelease.id,
            draft: false,
          });
          return {
            upload_url: publishedRelease.upload_url,
            html_url: publishedRelease.html_url,
            tag_name: publishedRelease.tag_name,
            name: publishedRelease.name,
            body: publishedRelease.body,
          };
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      id: publish_release

    - name: Download Release Assets (.exe, .deb, .rpm)
      run: |
        # Fetch all release assets URLs
        ASSETS_URLS=$(curl -s \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r '.assets[] | .browser_download_url' | grep -E '\.(exe|deb|rpm)$')
    
        # Download each asset
        echo "$ASSETS_URLS" | while read url; do
          filename=$(basename "$url")
          curl -L -o "${{ github.workspace }}/${filename}" "$url"
        done

    - name: Upload Release Asset to AWS S3
      uses: jakejarvis/s3-sync-action@master
      env:
        SOURCE_DIR: './'
        AWS_S3_BUCKET: ${{ secrets.S3_BUCKET_NAME }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: 'us-west-2'
        DEST_DIR: 'basic/development/windows/download'  # If you want to specify a directory in S3

    - name: Send Release Note to Slack
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
        text: ${{ steps.release.outputs.body }}
        author_name: Release Automation Bot
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
